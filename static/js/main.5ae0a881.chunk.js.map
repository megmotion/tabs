{"version":3,"sources":["icon.svg","components/Pagination.jsx","components/Searchbox.jsx","components/Spinner.jsx","components/Tab.jsx","components/TabsList.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","root","margin","Pagination","paginate","tabsPerPage","totalTabs","classes","pageNumbers","i","Math","ceil","push","count","onChange","event","value","variant","shape","size","color","className","textAlign","position","background","padding","breakpoints","down","paddingTop","textfield","button","input","fontSize","borderRadius","Searchbox","searchChange","searchTabs","Card","square","TextField","placeholder","onKeyDown","key","code","InputProps","Button","onClick","marginTop","Spinner","CircularProgress","thickness","listItem","icon","width","minWidth","link","type","paddingLeft","Tab","id","artist","title","tabTypes","ListItem","ListItemAvatar","src","alt","Link","target","underline","rel","href","Breadcrumbs","map","TabsList","tabs","song","nameWithoutThePrefix","createMuiTheme","palette","primary","light","main","dark","secondary","typography","useNextVariants","maxWidth","minHeight","container","message","App","useState","setTabs","loading","setLoading","currentPage","setCurrentPage","searchfield","setSearchfield","setMessage","indexOfLastTab","indexOfFirstTab","currentTabs","slice","Paper","elevation","fetch","then","response","json","items","length","Typography","gutterBottom","pageNumber","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ae0a881.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.4c4f0bb0.svg\";"," import React from 'react';\r\n\r\n import { makeStyles } from '@material-ui/core/styles';\r\n import Paginator from '@material-ui/lab/Pagination';\r\n\r\n  const useStyles = makeStyles(theme => ({\r\n  root: {\r\n  \tmargin:'4vh',\r\n  },\r\n}));\r\n\r\n const Pagination = ({ paginate, tabsPerPage, totalTabs }) => {\r\n \tconst classes = useStyles();\r\n \tconst pageNumbers = [];\r\n \tconst handleChange = (event, value) => paginate(value);\r\n\r\n \tfor(let i=1; i<= Math.ceil(totalTabs/tabsPerPage); i++) {\r\n \t\tpageNumbers.push(i)\r\n \t}\r\n \treturn (\r\n \t\t<div>\r\n \t\t\t<Paginator \r\n \t\t\t\tcount={Math.ceil(totalTabs/tabsPerPage)} \r\n \t\t\t\tonChange={handleChange}\r\n \t\t\t\tvariant=\"outlined\" \r\n \t\t\t\tshape=\"rounded\" \r\n \t\t\t\tsize=\"large\"\r\n \t\t\t\tcolor=\"primary\"\r\n \t\t\t\tclassName={classes.root}\r\n \t\t\t/>\r\n \t\t</div>\r\n \t);\r\n }\r\n\r\nexport default Pagination;"," import React from 'react';\r\n\r\n import { makeStyles } from '@material-ui/core/styles';\r\n import Card from '@material-ui/core/Card';\r\n import TextField from '@material-ui/core/TextField';\r\n import Button from '@material-ui/core/Button';\r\n\r\n const useStyles = makeStyles(theme => ({\r\n  root: {\r\n  \ttextAlign: 'center',\r\n  \tposition: 'relative',\r\n  \tbackground: '#161616',\r\n  \tpadding: '0.5vh',\r\n  \t[theme.breakpoints.down('md')]: {\r\n      paddingTop: '1.5vh',\r\n    },\r\n  },\r\n  textfield: {\r\n  \tmargin: '1.5vh',\r\n  },\r\n  button: {\r\n  \tmargin: '2vh',\r\n  },\r\n  input: {\r\n    fontSize: 'calc(8px + 1.5vh)',\r\n    background:'#fff',\r\n    borderRadius: 0,\r\n    color:'#770'\r\n  }\r\n}));\r\n\r\n const Searchbox = ({ searchChange, searchTabs }) => {\r\n \tconst classes = useStyles();\r\n \tconst onKeyDown = (event) => {\r\n    if(event.key === \"Enter\" || event.code === \"NumpadEnter\"){\r\n      searchTabs()\r\n    }\r\n  }\r\n \treturn (\r\n \t\t<Card className={classes.root} square >\r\n\t \t\t<TextField \r\n\t \t\t\tvariant=\"outlined\"\r\n\t \t\t\tplaceholder=\"Title or/and artist\"\r\n\t \t\t\tonChange={searchChange}\r\n\t \t\t\tonKeyDown={onKeyDown}\r\n\t \t\t\tclassName={classes.textfield}\r\n\t \t\t\tInputProps={{\r\n\t\t\t        className: classes.input\r\n\t\t\t    }}\r\n\t \t\t/>\r\n\t \t\t<Button \r\n\t \t\t\t\tvariant=\"contained\" \r\n\t \t\t\t\tonClick={searchTabs} \r\n\t \t\t\t\tcolor=\"primary\"\r\n\t \t\t\t\tsize=\"large\"\r\n\t \t\t\t\tclassName={classes.button}\r\n\t \t\t>\r\n\t \t\t\tGet tabs!\r\n\t \t\t</Button>\r\n \t\t</Card>\r\n \t);\r\n }\r\n\r\nexport default Searchbox","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n  \tmarginTop:'20vh',\r\n  \t[theme.breakpoints.down('md')]: {\r\n      marginTop:'10vh'\r\n    },\r\n  },\r\n}));\r\n\r\nconst Spinner = () => {\r\n\tconst classes = useStyles();\r\n \treturn (\r\n \t\t<CircularProgress className={classes.root} color=\"secondary\" size={300} thickness={6}/>\r\n \t);\r\n }\r\n\r\nexport default Spinner;","import React from 'react';\r\n\r\nimport icon from '../icon.svg';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Breadcrumbs  from '@material-ui/core/Breadcrumbs';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  listItem:{\r\n  \t[theme.breakpoints.down('md')]: {\r\n      padding: '8px',\r\n    },\r\n  },\r\n  icon: {\r\n  \twidth: 'calc(20px + 2vmin)',\r\n  \tminWidth: '32px'\r\n  },\r\n  link: {\r\n  \tmarginTop: '-0.5vh',\r\n  \t'&:hover': {\r\n  \t\tcolor: '#770',\r\n  \t}\r\n  },\r\n  type: {\r\n  \tpaddingLeft: '10px',\r\n  \t[theme.breakpoints.down('md')]: {\r\n      padding: '6px',\r\n    },\r\n  }\r\n}));\r\n\r\nconst Tab = ({ id, artist, title, tabTypes }) => {\r\n\tconst classes = useStyles();\r\n \treturn (\r\n \t\t<ListItem className={classes.listItem}>\r\n\t \t\t<ListItemAvatar >\r\n\t\t          <img src={icon} alt='music note' className={classes.icon}/>\r\n\t        </ListItemAvatar>\r\n \t\t\t<Link\r\n \t\t\t\ttarget=\"_blank\"\r\n \t\t\t\tunderline=\"none\"\r\n \t\t\t\tclassName={classes.link}\r\n \t\t\t\trel=\"noopener noreferrer\"  \r\n \t\t\t\thref={`http://www.songsterr.com/a/wa/bestMatchForQueryString?s=${title}&a=${artist}`}>{artist} - {title}\r\n \t\t\t</Link>\r\n\t \t\t<Breadcrumbs  className={classes.type}>\r\n\t\t \t\t{tabTypes.map((type) => {\r\n\t\t \t\t\treturn <span key={type}>\r\n\t\t \t\t\t{\r\n\t\t \t\t\t\ttype === 'TEXT_GUITAR_TAB' ? 'GUITAR' :\r\n\t\t \t\t\t\ttype === 'TEXT_BASS_TAB' ? 'BASS' : type\r\n\t\t \t\t\t} </span>\r\n\t\t \t\t})}\r\n\t \t\t</Breadcrumbs>\r\n \t\t</ListItem>\r\n \t);\r\n}\r\n\r\nexport default Tab;"," import React from 'react';\r\n\r\n import Tab from './Tab';\r\n\r\n const TabsList = ({ tabs }) => {\r\n \treturn (\r\n \t\t<div>\r\n \t\t\t{\r\n\t\t\t\ttabs.map((song) => {\r\n\t\t\t \t\treturn (\r\n\t\t\t \t\t\t<Tab \r\n\t\t\t \t\t\t\tkey={song.id} \r\n\t\t\t \t\t\t\tid={song.id} \r\n\t\t\t \t\t\t\ttitle={song.title} \r\n\t\t\t \t\t\t\tartist={song.artist.nameWithoutThePrefix}\r\n\t\t\t \t\t\t\ttabTypes={song.tabTypes}\r\n\t\t\t \t\t\t/>\r\n\t\t\t \t\t);\r\n\t\t\t \t})\r\n\t\t\t}\r\n \t\t</div>\r\n \t);\r\n }\r\n\r\nexport default TabsList;","import React, { useState } from 'react';\nimport './App.css';\n\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Pagination from './components/Pagination';\nimport Searchbox from './components/Searchbox';\nimport Spinner from './components/Spinner';\nimport TabsList from './components/TabsList';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nconst theme = createMuiTheme({\n   palette: {\n      primary: {\n         light: '#fff',\n         main: '#aa1',\n         dark: '#770'\n      },\n      secondary: {\n        main: '#ccc',\n      },\n   },\n   typography: { \n      useNextVariants: true\n   }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 1200,\n    minHeight: '85vh',\n    margin: 'auto',\n    marginTop: '3vh',\n    background: '#eee',\n    fontSize: 'calc(10px + 2vmin)',\n    textAlign: 'center',\n    [theme.breakpoints.down('md')]: {\n      marginTop: '0',\n    },\n  },\n  container: {\n    padding: '2vh',\n    [theme.breakpoints.down('md')]: {\n      padding: '0.5vh',\n    },\n  },\n  message: {\n    padding: '2vh',\n  }\n}));\n\nconst App = () => {\n  const [tabs, setTabs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [searchfield, setSearchfield] = useState('');\n  const [tabsPerPage] = useState(12);\n  const [message, setMessage] = useState('');\n  const classes = useStyles();\n\n  //Tab search\n  const onSearchChange = (event) => {\n     setSearchfield(event.target.value)\n  }\n\n  const onSearchTabs = () => {\n    setTabs([]);\n    setLoading(true)\n      fetch(`https://www.songsterr.com/a/ra/songs.json?pattern=${searchfield}`)\n        .then(response => response.json())\n        .then(items => {\n          if (items.length === 0) {\n            setMessage('No results found :('); setLoading(false)\n          } else {\n            setTabs(items); setLoading(false)\n          }\n        })\n  }\n\n  //Pagination\n  const indexOfLastTab = currentPage * tabsPerPage;\n  const indexOfFirstTab = indexOfLastTab - tabsPerPage;\n  const currentTabs = tabs.slice(indexOfFirstTab, indexOfLastTab);\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber)\n\n  return (\n    <MuiThemeProvider theme = { theme }>\n      <Paper elevation={16} className={classes.root} square >\n        <Searchbox \n          searchChange={onSearchChange}\n          searchTabs={onSearchTabs}\n        />\n        {\n          loading\n            ? <Spinner />\n            : tabs.length===0\n              ?  <Typography variant=\"h3\" gutterBottom color=\"primary\" className={classes.message}>\n                  {message}\n                 </Typography>\n              : <div className={classes.container}>\n                <TabsList tabs={currentTabs}/>\n                { tabs.length>12\n                ? <Pagination paginate={paginate} tabsPerPage={tabsPerPage} totalTabs={tabs.length}/>\n                : null\n                }\n              </div>\n        }      \n      </Paper>\n      </MuiThemeProvider> \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}